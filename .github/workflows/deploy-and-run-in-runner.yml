name: (Deprecated) Playwright Regression Tests
on:
  workflow_dispatch:

jobs:
  deploy-localhost-app:
    runs-on: [self-hosted, linux, X64]
    outputs:
      container_id: ${{ steps.deploy.outputs.container_id }}

    steps:
      - name: Deploy Local Application (on self-hosted runner)
        id: deploy
        run: |
          # Pull the container image from Docker Hub
          docker pull gprestes/the-internet

          # Run the container on port 7080 and capture the container ID
          CONTAINER_ID=$(docker run -d -p 7080:5000 gprestes/the-internet)
          echo "Container started with ID: $CONTAINER_ID"
          
          # Save container ID for later use
          echo "container_id=$CONTAINER_ID" >> $GITHUB_ENV
          echo "container_id=$CONTAINER_ID" >> $GITHUB_OUTPUT

          # Ensure it has time to initialize
          sleep 5

  run-playwright-tests:
    needs: deploy-localhost-app
    runs-on: [ self-hosted, linux, X64 ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node.js Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install Dependencies
        run: npm ci

      - name: Run Playwright Tests
        run: npx playwright test specs/addRemoveElements.spec.ts

      - name: Upload Run Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Run Artifacts
          path: |
            allure-results
            playwright-report
            artifacts
          retention-days: 1

  cleanup-localhost-app:
    needs: [deploy-localhost-app, run-playwright-tests]
    runs-on: [self-hosted, linux, X64]
    if: always()

    steps:
      - name: Stop and Remove Container
        run: |
          echo "Stopping container: ${{ needs.deploy-localhost-app.outputs.container_id }}"
          docker stop ${{ needs.deploy-localhost-app.outputs.container_id }} || true
          docker rm ${{ needs.deploy-localhost-app.outputs.container_id }} || true

      - name: Kill Process on Port 7080 (if exists)
        run: |
          PID=$(lsof -i:7080) || true
          if [ ! -z "$PID" ]; then
            echo "Killing process on port 7080 (PID: $PID)"
            kill -9 $PID
          else
            echo "No process running on port 7080"
          fi