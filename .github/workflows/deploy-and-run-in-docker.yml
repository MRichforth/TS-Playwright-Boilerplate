name: (Docker-compose) Playwright Regression Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  deploy-and-run:
    runs-on: [ self-hosted, linux, X64 ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker compose version

      - name: Deploy app & run tests
        run: |
          docker compose up --abort-on-container-exit

      - name: Upload Allure Results Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

      - name: Upload Playwright Report Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 1

      - name: Upload Artifacts Directory Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts
          path: artifacts
          retention-days: 1

      - name: Cleanup Services
        if: always()
        run: |
          docker compose down

  generate-and-publish-report:
    if: always()
    needs: [ deploy-and-run ]
    runs-on: [ self-hosted, linux, X64 ]

    steps:
      - name: Pull repository
        uses: actions/checkout@v4

      - name: Setup AWS cli
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Create timestamp
        id: timestampid
        run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

      - name: Download Allure Results from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results*
          merge-multiple: true
          path: merged-allure-results

      - name: Download current history files from S3
        run: aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/history/ ./merged-allure-results/history --recursive

      - name: Generate Allure report
        run: allure generate ./merged-allure-results

      - name: Backup the history with the latest data
        run: aws s3 cp ./allure-report/history s3://${{ secrets.AWS_S3_BUCKET }}/history/  --recursive

      - name: Deploy html report to S3
        run: aws s3 cp ./allure-report s3://${{ secrets.AWS_S3_BUCKET }}/report/${{ steps.timestampid.outputs.timestamp }}/ --recursive

      - name: Write URL in summary
        run: echo "### [Allure results] http://${{ secrets.AWS_S3_BUCKET_URL }}/report/${{ steps.timestampid.outputs.timestamp }}/index.html" >> $GITHUB_STEP_SUMMARY